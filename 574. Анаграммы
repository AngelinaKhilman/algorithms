(Время: 1 сек. Память: 16 Мб Сложность: 26%)
Cтрока S1 называется анаграммой строки S2, если она получается из S2 перестановкой символов. Даны строки S1 и S2. Напишите программу, которая проверяет, является ли S1 анаграммой S2.

Входные данные
Первая строка входного файла INPUT.TXT содержит строку S1, вторая - S2. Обе строки состоят только из прописных букв английского алфавита. Строки не пусты и имеют длину не больше 100000 символов.

Выходные данные
В выходной файл OUTPUT.TXT выведите YES, если S1 является анаграммой S2, и NO - в противном случае.

def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    s1 = str(line[0])
    set_s1 = set(line[0])
    s11 = [0] * len(set_s1)
    set_s1 = list(set_s1)
    line = input_file.readline().split()
    s2 = str(line[0])
    set_s2 = set(line[0])
    set_s2 = list(set_s2)
    s22 = [0] * len(set_s2)
    print(s11, s22)
    print(s1, set_s1, s2, set_s2)
    set_s1.sort()
    set_s2.sort()
    ans = "YES"
    if set_s1 == set_s2:
        for i in range(len(s1)):
            for j in range(len(set_s1)):
                if s1[i] == set_s1[j]:
                    s11[j] += 1
        for i in range(len(s2)):
            for j in range(len(set_s2)):
                if s2[i] == set_s2[j]:
                    s22[j] += 1
        print(s11, s22)
        if len(s11) != len(s22):
            ans = "NO"
        else:
            for i in range(len(s11)):
                if s11[i] != s22[i]:
                    ans = "NO"
 
    else:
        ans = "NO"
    print(ans)
    output_file.write(str(ans) + '\n')
 
 
if __name__ == "__main__":
    main()
