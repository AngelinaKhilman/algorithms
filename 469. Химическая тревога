(Время: 1 сек. Память: 16 Мб Сложность: 50%)
Произошло радиоактивное заражение местности. Составлена карта зараженности. Она представляет собой прямоугольную таблицу N×M, в клетках которой записана зараженность соответствующего участка.

Требуется написать программу, которая найдет путь из левой верхней клетки таблицы в правую нижнюю клетку с минимальной суммарной дозой радиации.

Входные данные
Входной файл INPUT.TXT содержит в первой строке числа N и M, а в следующих N строках – по M чисел – карта зараженности местности. Числа в строках разделяются одним пробелом. 1 ≤ N ≤ 30, 1 ≤ M ≤ 30, зараженность участка – целое число от 0 до 100.

Выходные данные
Выходной файл OUTPUT.TXT должен содержать одно число – суммарную долю радиации.

def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    n, m = int(line[0]), int(line[1])
    e = []
    a = []
    for i in range(n):
        line = input_file.readline().split()
        b = []
        for j in range(m):
            b.append(int(line[j]))
        a.append(b)
    for i in range(n):
        for j in range(m):
            if j + 1 < m:
                e.append((i * m + j, i * m + (j + 1),  a[i][j + 1]))
            if i + 1 < n:
                e.append((i * m + j, (i + 1) * m + (j), a[i + 1][j]))
            if i - 1 >= 0:
                e.append((i * m + j, (i - 1) * m + (j),  a[i - 1][j]))
            if j - 1 >= 0:
                e.append((i * m + j, (i) * m + (j - 1),a[i][j - 1]))
 
 
    print(e)
    INF = 10 ** 10
    d = []
    for i in range(n * m):
        d.append(INF)
    d[0] = 0
    for i in range(n * m - 1):
        for j in range(len(e)):
            if d[e[j][1]] > d[e[j][0]] + e[j][2] and d[e[j][0]] != INF:
                d[e[j][1]] = d[e[j][0]] + e[j][2]
    print(d)
    ans = d[-1] + a[0][0]
    print(ans)
    output_file.write(str(ans) + "\n")
    input_file.close()
    output_file.close()
if __name__ == "__main__":
    main()
