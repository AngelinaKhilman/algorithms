(Время: 1 сек. Память: 16 Мб Сложность: 18%)
В галактике «Milky Way» на планете «Snowflake» есть N городов, некоторые из которых соединены дорогами. Император галактики «Milky Way» решил провести инвентаризацию дорог на планете «Snowflake». Но, как оказалось, он не силен в математике, поэтому он просит вас сосчитать количество дорог. Требуется написать программу, помогающую императору сосчитать количество дорог на планете «Snowflake».

Входные данные
В первой строке входного файла INPUT.TXT записано число N (0 ≤ N ≤ 100). В следующих N строках записано по N чисел, каждое из которых является единичкой или ноликом. Причем, если в позиции (i, j) квадратной матрицы стоит единичка, то i-ый и j-ый города соединены дорогами, а если нолик, то не соединены.

Выходные данные
В выходной файл OUTPUT.TXT необходимо вывести число, определяющее количество дорог на планете «Snowflake».

def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    count = 0
 
    n=int(input_file.readline())
    print(n)
    for i in range(n):
        a = input_file.readline().split()
        for j in range(n):
            count = count + int(a[j])
    ans = count // 2
 
 
    output_file.write(str(ans) + "\n")
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
