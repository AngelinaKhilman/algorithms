ремя: 1 сек. Память: 16 Мб Сложность: 27%)
Трёхчлен a + bx + сy от двух переменных x и y однозначно определяется коэффициентами a, b и c. Написать программу, которая по заданным a, b и c выводит соответствующий трёхчлен, записанный с использованием алгебраических соглашений:

коэффициент при члене, содержащем переменную, опускается, если его модуль равен единице;
член, коэффициент при котором равен нулю, опускается (кроме случая, когда все коэффициенты равны нулю, тогда трехчлен состоит из одной цифры 0);
знак "+" опускается, если он предшествует отрицательному коэффициенту;
знак "+" опускается, если он стоит в начале выражения (так называемый унарный плюс);
знак умножения между коэффициентом и переменной опускается.
При этом запрещено менять местами члены.

Входные данные
Во входном файле INPUT.TXT через пробел записаны целые коэффициенты a, b и с, каждое из которых не превосходит 30000 по абсолютной величине.

Выходные данные
Выходной файл OUTPUT.TXT должен содержать трехчлен, записанный с использованием алгебраических соглашений.


def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    a, b, c = int(line[0]), int(line[1]), int(line[2])
    s = ""
    if a != 0:
        if a > 0:
            s += str(a)
        if a < 0:
            s += str(a)
    if b != 0:
        if b > 0:
            if a != 0:
                s += "+"
            if b > 1:
                s += str(b)
            s += "x"
        if b < 0:
            if b == -1:
                s += "-"
            else:
                s += str(b)
            s += "x"
    if c != 0:
        if c > 0:
            if a !=0 or b != 0:
                s += "+"
            if c > 1:
                s += str(c)
            s += "y"
        if c < 0:
            if c == -1:
                s += "-"
            else:
                s += str(c)
            s += "y"
    if a == 0 and b == 0 and c == 0:
        s = "0"
    print(s)
    output_file.write(str(s) + '\n')
 
 
if __name__ == "__main__":
    main()
