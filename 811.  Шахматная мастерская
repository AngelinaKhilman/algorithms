Шахматная мастерская
(Время: 1 сек. Память: 16 Мб Сложность: 30%)
Хозяин мастерской по изготовлению шахматных досок гроссмейстер Хосе Раулевич Капабланка был очень зол. «Ну, кто так раскрашивает доски?! Ну скажи мне, Бобби, разве я тебя так учил раскрашивать доски?!» - спрашивал он у своего подмастерья.

А дело было вот в чем. Недавно его мастерская получила заказ на изготовление нестандартной шахматной доски размером N на M . Саму шахматную доску из дорогой породы дерева он изготовил, а раскрасить ее поля он поручил своему подмастерью и ученику Бобби. Бобби, однако, справился с этой задачей очень плохо. Он раскрасил доску так, что некоторые соседние поля оказались покрашенными в один цвет. А такого на шахматной доске никогда не было, и быть не может!

Теперь у Бобби есть всего одна ночь на исправление своей ошибки. Казалось бы, времени много. Но все усложняется тем, что перекрасить поле шахматной доски достаточно сложная задача, ведь надо аккуратно снять старый слой краски. Поэтому Бобби хочет перекрасить наименьшее возможное число полей. Помогите ему написать программу, которая найдет: какие поля доски ему надо перекрасить.

Единственным требованием к шахматной доске, которая должна получиться в результате, является то, что любые два соседних поля покрашены в разные цвета. Ну, и, конечно, любое поле должно быть либо белым, либо черным.

Соседними полями на шахматной доске Хосе Раулевич считает поля, имеющие общую сторону.

Входные данные
Первая строка входного файла INPUT.TXT содержит два целых числа: N и M (1 ≤ N, M ≤ 100). Далее идут N строк по M символов в каждой. j-ый символ i-ой из этих строк равен W, если Бобби покрасил соответствующее (т.е. находящееся на пересечении i-ой горизонтали и j-ой вертикали) поле в белый цвет, и B, если в черный.

Выходные данные
В первой строке выходного файла OUTPUT.TXT выведите минимальное количество k полей, которые должен перекрасить Бобби.

Далее выведите k строк, описывающих поля, которые он должен перекрасить. Описание каждого поля должно состоять из двух чисел: i и j (1 ≤ i ≤ N, 1 ≤ j ≤ M), задающих горизонталь и вертикаль, на пересечении которых находится данное поле.

Ни одно поле не должно быть указано в этом списке дважды. Может оказаться так, что k = 0, и Хосе Раулевич зря кричал на Бобби. Впрочем, это объясняется тем, что гроссмейстер уже весьма стар и его зрение далеко не идеально.



def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
 
    n, m = int(line[0]), int(line[1])
    a = []
 
    for i in range(n):
        b = []
        line = input_file.readline().split()
        for j in range(m):
            b.append(line[0][j])
        a.append(b)
 
    count1 = 0
    count2 = 0
    c1 = []
    c2 = []
 
    for i in range(n):
        for j in range(m):
            if i % 2 == 0 and j % 2 == 0:
                if a[i][j] != "B":
                    count1 += 1
                    c1.append((i + 1, j + 1))
            if i % 2 == 1 and j % 2 == 1:
                if a[i][j] != "B":
                    count1 += 1
                    c1.append((i + 1, j + 1))
            if i % 2 == 0 and j % 2 == 1:
                if a[i][j] != "W":
                    count1 += 1
                    c1.append((i + 1, j + 1))
            if i % 2 == 1 and j % 2 == 0:
                if a[i][j] != "W":
                    count1 += 1
                    c1.append((i + 1, j + 1))
 
 
            if i % 2 == 0 and j % 2 == 0:
                if a[i][j] != "W":
                    count2 += 1
                    c2.append((i + 1, j + 1))
            if i % 2 == 1 and j % 2 == 1:
                if a[i][j] != "W":
                    count2 += 1
                    c2.append((i + 1, j + 1))
            if i % 2 == 0 and j % 2 == 1:
                if a[i][j] != "B":
                    count2 += 1
                    c2.append((i + 1, j + 1))
            if i % 2 == 1 and j % 2 == 0:
                if a[i][j] != "B":
                    count2 += 1
                    c2.append((i + 1, j + 1))
 
    if count1 != 0 and count2 != 0:
        if count1 > count2:
            print(count2)
            print(c2)
            output_file.write(str(count2) + "\n")
            for i in range(len(c2)):
                output_file.write(' '.join(str(x) for x in c2[i]) + "\n")
        else:
            print(count1)
            print(c1)
            output_file.write(str(count1) + "\n")
            for i in range(len(c1)):
                output_file.write(' '.join(str(x) for x in c1[i]) + "\n")
    else:
        output_file.write(str(0) + "\n")
 
 
 
 
 
if __name__ == "__main__":
    main()
