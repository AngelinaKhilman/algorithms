(Время: 1 сек. Память: 16 Мб Сложность: 24%)
Далеко не все в Тентуре имеют право носить малиновые штаны, и конечно, не все владеют пепелацем с гравицапой, зато один предприимчивый чатланин поставил несколько ловушек, захватывающих отваливающиеся детали с пролетающих мимо инопланетных кораблей. Каждое утро он их обходит, в надежде, что рано или поздно из этих запчастей ему удастся собрать какое-нибудь транспортное средство. Путь свой чатланин планирует по карте, на которой аккуратно отмечены ловушки, отсчитывая начало координат от собственного дома. Начинается обход от дома, и в нем же и заканчивается.

Требуется определить, какое расстояние проходит чатланин за день.

Входные данные
В первой строке входного файла INPUT.TXT находится натуральное число N – количество ловушек, установленных чатланином (N ≤ 10), далее следуют N строк формата «X Y», описывающих координаты ловушек в порядке их обхода (-10 ≤ X,Y ≤ 10; X,Y – целые числа).

Выходные данные
В выходной файл OUTPUT.TXT выведите общее расстояние, которое пройдет чатланин, обойдя все ловушки в приведенном порядке и вернувшись в начало координат от последней ловушки, с точностью до трех знаков после запятой.

import math
def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split(' ')
    n = int(line[0])
    a = []
    for i in range(n):
        line = input_file.readline().split(' ')
        b = []
        b.append(int(line[0]))
        b.append(int(line[1]))
        a.append(b)
 
    summ = 0
    if n > 0:
        summ += math.hypot(-a[0][1], -a[0][0])
        summ += math.hypot(-a[n - 1][0], -a[n - 1][1])
    for i in range(1, n):
        d = math.hypot(a[i][1] - a[i - 1][1], a[i][0] - a[i - 1][0])
        summ += d
 
    summ = "%.3f" % (summ)
    print(summ)
    output_file.write(str(summ) + "\n")
 
 
if __name__ == "__main__":
    main()
