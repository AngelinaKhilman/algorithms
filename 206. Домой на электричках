(Время: 1 сек. Память: 16 Мб Сложность: 50%)
Одна из команд-участниц олимпиады решила вернуться домой на электричках. При этом ребята хотят попасть домой как можно раньше. К сожалению, не все электрички идут от города, где проводится олимпиада, до станции, на которой живут ребята. И, что еще более обидно, не все электрички, которые идут мимо их станции, останавливаются на ней (равно как вообще, электрички останавливаются далеко не на всех станциях, мимо которых они идут).

Все станции на линии пронумерованы числами от 1 до N. При этом станция номер 1 находится в городе, где проводится олимпиада, и в момент времени 0 ребята приходят на станцию. Станция, на которую нужно попасть ребятам, имеет номер E.

Напишите программу, которая по данному расписанию движения электричек вычисляет минимальное время, когда ребята могут оказаться дома.

Входные данные
Во входном файле INPUT.TXT записаны сначала числа N (2 ≤ N ≤ 100) и E (2 ≤ E ≤ N). Затем записано число M (0 ≤ M ≤ 100), обозначающее число рейсов электричек. Далее идет описание M рейсов электричек. Описание каждого рейса электрички начинается с числа Ki (2 ≤ Ki ≤ N) — количества станций, на которых она останавливается, а далее следует Ki пар чисел, первое число каждой пары задает номер станции, второе — время, когда электричка останавливается на этой станции (время выражается целым числом из диапазона от 0 до 109). Станции внутри одного рейса упорядочены в порядке возрастания времени. В течение одного рейса электричка все время движется в одном направлении — либо от города, либо к городу.

Выходные данные
В выходной файл OUTPUT.TXT выведите одно число — минимальное время, когда ребята смогут оказаться на своей станции. Если существующими рейсами электричек они добраться не смогут, выведите –1.



def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    inf = 10 ** 9
    a = []
    b = []
    c = []
    d = []
    line = input_file.readline().split()
    n, f = int(line[0]), int(line[1])
    line = input_file.readline().split()
    m = int(line[0])
 
    for i in range(m):
        line = input_file.readline().split()
        tmp = int(line[0])
        if tmp % 2 == 0:
            do = (tmp * 2) - 2
        else:
            do = (tmp * 2) - 2
        if int(line[0]) > 2:
            for j in range(1, do, 2):
                a.append(int(line[j]))
                b.append(int(line[j+1]))
                c.append(int(line[j+2]))
                d.append(int(line[j+3]))
        if int(line[0]) == 2:
            a.append(int(line[1]))
            b.append(int(line[2]))
            c.append(int(line[3]))
            d.append(int(line[4]))
 
    print(a)
    print(b)
    print(c)
    print(d)
 
    distination = []
    for i in range(n):
        distination.append(inf)
    s = len(a)
 
    distination[0] = 0
    for i in range(n-1):
        for j in range(s):
            if distination[c[j] - 1] > d[j] and distination[a[j] - 1] != inf and b[j] >= distination[a[j] - 1]:
                distination[c[j] - 1] = d[j]
 
    for i in range(n):
        if distination[i] == inf:
            distination[i] = 0
 
    print(distination)
 
    for i in range(n):
        if distination[i] == 0:
            distination[i] = -1
            distination[0] = 0
    print(distination)
 
    ans = distination[f-1]
    print(ans)
 
    output_file.write(str(ans) + "\n")
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
