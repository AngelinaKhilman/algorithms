Время: 1 сек. Память: 16 Мб Сложность: 31%)

В левой нижней клетке шахматной доски размера N×N стоит пешка. Двое игроков по очереди двигают её, причём каждый может подвинуть её на одну клетку вверх или на одну клетку вправо. На диагонали доски написаны числа a1, a2, …, aN. Когда пешка попадает на диагональ, игра кончается и выигрыш первого игрока равен значению числа, написанного в клетке с остановившейся пешкой. Напишите программу определения гарантированного выигрыша первого игрока.

Входные данные
В первой строке входного файла INPUT.TXT записано число N (1 ≤ N ≤ 100). Во второй строке записаны натуральные числа a1, a2, …, aN (1 ≤ ai ≤ 100).

Выходные данные
В выходной файл OUTPUT.TXT выведите одно число – выигрыш первого игрока.

def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    n = int(input_file.readline())
    a = input_file.readline().split()
    f = []
 
    for i in range(n):
        cur = []
        for j in range(n):
            t = [0, 0]
            cur.append(t)
        f.append(cur)
 
    for i in range(n):
        j = i
        while j >= 0:
            for flag in range(2):
                if i == j:
                    f[i][j][flag] = int(a[i])
                else:
                    if flag == 1:
                        f[i][j][flag] = max(f[i - 1][j][0], f[i][j + 1][0])
                    else:
                        f[i][j][flag] = min(f[i - 1][j][1], f[i][j + 1][1])
            j -= 1
    output_file.write(str(f[n - 1][0][1]) + "\n")
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
