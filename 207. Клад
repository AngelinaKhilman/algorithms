Время: 1 сек. Память: 16 Мб Сложность: 28%)
Клад
Найти закопанный пиратами клад просто: всё, что для этого нужно – это карта. Как известно, пираты обычно рисуют карты от руки и описывают алгоритм действий. Большая часть таких действий просто сводится к прохождению какого-то количества шагов в одном из восьми направлений (1 – север, 2 – северо-восток, 3 – восток, 4 – юго-восток, 5 – юг, 6 – юго-запад, 7 – запад, 8 – северо-запад) (см. рис). Длина шага в любом направлении равна 1.

Путешествие по такому пути обычно является прекрасным способом посмотреть окрестности, однако в наше время постоянной спешки ни у кого нет времени на это. Поэтому кладоискатели хотят идти напрямую в точку, где зарыт клад. Например, вместо того, чтобы проходить три шага на север, один шаг на восток, один шаг на север, три шага на восток, два шага на юг и один шаг на запад, можно пройти напрямую, использовав около 3.6 шага (см. рисунок).

Вам необходимо узнать точку, в которой находится клад согласно указаниям пиратов.

Входные данные
Первая строка входного файла INPUT.TXT содержит число N – число указаний (1≤N≤40). Последующие N строк содержат сами указания – номер направления (целое число от 1 до 8) и количество шагов (целое число от 1 до 1000). Числа разделены пробелами.

Выходные данные
В выходной файл OUTPUT.TXT выведите координаты X и Y точки (два вещественных числа, разделённые пробелом), где зарыт клад, считая, что ось OX направлена на восток, а ось OY – на север. В начале кладоискатель должен стоять в начале координат. Координаты необходимо вывести с точностью 10-3.

import math
def main():
 
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    n = int(line[0])
    x = 0
    y = 0
    for i in range(n):
        line = input_file.readline().split()
        nap, k = int(line[0]), int(line[1])
        if nap == 1:
            y += k
        if nap == 2:
            x += (k * math.sqrt(1 / 2))
            y += (k * math.sqrt(1 / 2))
        if nap == 3:
            x += k
        if nap == 4:
            y -= (k * math.sqrt(1 / 2))
            x += (k * math.sqrt(1 / 2))
        if nap == 5:
            y -= k
        if nap == 6:
            x -= (k * math.sqrt(1 / 2))
            y -= (k * math.sqrt(1 / 2))
        if nap == 7:
            x -= k
        if nap == 8:
            x -= (k * math.sqrt(1 / 2))
            y += (k * math.sqrt(1 / 2))
    print(x, y)
    output_file.write(str('%.3f' % x) + " " + str('%.3f' % y) + "\n")
    input_file.close()
    output_file.close()
if __name__ == "__main__":
    main()
