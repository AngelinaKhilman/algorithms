Банкет
(Время: 1 сек. Память: 16 Мб Сложность: 44%)
На банкет были приглашены N Очень Важных Персон (ОВП). Были поставлены 2 стола. Столы достаточно большие, чтобы все посетители банкета могли сесть за любой из них. Проблема заключается в том, что некоторые ОВП не ладят друг с другом и не могут сидеть за одним столом. Вас попросили определить, возможно ли всех ОВП рассадить за двумя столами.

Входные данные
В первой строке входного файла INPUT.TXT дано два целых числа: N и M (0 ≤ N,M ≤ 100), где N - количество ОВП, а M - количество пар ОВП, которые не могут сидеть за одним столом. В следующих M строках записано по 2 числа - пары ОВП, которые не могут сидеть за одним столом.

Выходные данные
Если способ рассадить ОВП существует, то в выходной файл OUTPUT.TXT выведите YES и NO в противном случае.





#include <bits/stdc++.h>

using namespace std;

int clStart, clEnd;
int n, m;
vector <vector <int> > g(100);
vector <int>  cl(100, 0);

int invert(int c){
    return c == 1 ? 2 : 1;
}

void dfs(int v, int c){
    cl[v] = c;
    for (int i = 0; i < g[v].size(); i++){
        int to = g[v][i];
        if (cl[to] == 0)
        {
            dfs(to, invert(c));
        }
        else if(cl[to] == c){
           cout << "NO";
           exit(0);
        }

    }
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin >> n;
    cin >> m;
    int a, b;
    for (int i = 0; i < m; i++){
        cin >> a;
        cin >> b;
        g[a - 1].push_back(b - 1);
        g[b - 1].push_back(a - 1);
    }
    clStart = -1;
    for (int i=0; i<n; ++i)
		if (cl[i] == 0)
			dfs(i, 1);


    cout << "YES" << endl;

    //system("pause");
    return 0;
}
