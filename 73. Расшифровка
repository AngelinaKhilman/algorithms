Расшифровка
(Время: 1 сек. Память: 16 Мб Сложность: 28%)
Рассмотрим работу простейшего шифра. Шифруемое сообщение состоит из английских букв, записанных в нижнем регистре и символа пробела. Шифрование происходит посимвольно. Каждой букве ставим в соответствие число: a – 1, b – 2, … , z – 26, ‘ ‘ – 27. Далее индекс символа складывается с номером в сообщении по модулю 27, а результат сложения представляется в системе счисления с основанием 27 (0, 1, …, Q в верхнем регистре).

Необходимо написать дешифратор.

Входные данные
В единственной строке входного файла INPUT.TXT содержится закодированная строка, длиной от 1 до 255 символов. Строка записана в верхнем регистре.

Выходные данные
В единственную строку выходного файла OUTPUT.TXT нужно вывести расшифровку заданной строки, при этом символы английского алфавита следует выводить в нижнем регистре.









def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().strip()
    alph = "ABCDEFGHIJKLMNOPQRSTUVWXYZ "
    w = "0123456789ABCDEFGHIJKLMNOPQ"
    s = ""
    for i in range(len(line)):
        if w.find(line[i]) - i >= 0:
            k = w.find(line[i]) - i - 1
        else:
            k = w.find(line[i]) - i + 26
        print(k)
        s += alph[(k + 27 - 1) % 27]


    q = s.lower()

    output_file.write(str(q) + "\n")


if __name__ == "__main__":
    main()
    
    
    
