(Время: 1 сек. Память: 16 Мб Сложность: 25%)
Будем рассматривать только строчки, состоящие из заглавных английских букв. Например, рассмотрим строку AAAABCCCCCDDDD. Длина этой строки равна 14. Поскольку строка состоит только из английских букв, повторяющиеся символы могут быть удалены и заменены числами, определяющими количество повторений. Таким образом, данная строка может быть представлена как 4AB5C4D. Длина такой строки 7. Описанный метод мы назовем упаковкой строки.

Напишите программу, которая берет упакованную строчку и восстанавливает по ней исходную строку.

Входные данные
Входной файл INPUT.TXT содержит одну упакованную строку. В строке могут встречаться только конструкции вида nA, где n — количество повторений символа (целое число от 2 до 99), а A — заглавная английская буква, либо конструкции вида A, то есть символ без числа, определяющего количество повторений. Строка содержит от 1 до 80 символов.

Выходные данные
В выходной файл OUTPUT.TXT выведите восстановленную строку. При этом строка должна быть разбита на строчки длиной ровно по 40 символов (за исключением последней, которая может содержать меньше 40 символов).

def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    s = str(line[0])
    s = list(s)
    print(s)
    count = 0
 
    arr = []
    if len(s) == 1:
        ans = s[0]
    else:
        ans = ""
        sch = ""
        j = 0
        while j < len(s):
            if s[j].isdigit():
                sch += s[j]
            print(sch)
            if s[j].isalpha():
                if sch == "":
                    schint = 1
                else:
                    schint = int(sch)
                sch = ""
 
                for k in range(schint):
                    ans += s[j]
 
 
            j += 1
    print(ans)
    if len(ans) % 40 == 0:
        q = 0
    else:
        q = 1
    first = 0
    second = 40
    for i in range(len(ans) // 40 + q):
 
        output_file.write(str(ans[first:second]) + "\n")
        first += 40
        second += 40
 
 
 
 
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
