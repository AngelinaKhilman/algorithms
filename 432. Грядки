(Время: 1 сек. Память: 16 Мб Сложность: 40%)
Прямоугольный садовый участок шириной N и длиной M метров разбит на квадраты со стороной 1 метр. На этом участке вскопаны грядки. Грядкой называется совокупность квадратов, удовлетворяющая таким условиям:

из любого квадрата этой грядки можно попасть в любой другой квадрат этой же грядки, последовательно переходя по грядке из квадрата в квадрат через их общую сторону;
никакие две грядки не пересекаются и не касаются друг друга ни по вертикальной, ни по горизонтальной сторонам квадратов (касание грядок углами квадратов допускается).
Подсчитайте количество грядок на садовом участке.

Входные данные
В первой строке входного файла INPUT.TXT находятся числа N и M через пробел, далее идут N строк по M символов. Символ # обозначает территорию грядки, точка соответствует незанятой территории. Других символов в исходном файле нет. (1 ≤ N, M ≤ 200)

Выходные данные
В выходной файл OUTPUT.TXT выведите количество грядок на садовом участке.

def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    n, m = int(line[0]), int(line[1])
    a = []
   
    ans = 0
    dx = [0, 0, 1, -1]
    dy = [1, -1, 0, 0]
    for i in range(n):
        line = input_file.readline().split()
        a.append(list(''.join(line)))
        print(a[i])
 
    for i in range(n):
        for j in range(m):
            if a[i][j] == "#":
                ans = ans + 1
                queue = []
                queue.append([i, j])
                head = 0
                tail = 1
                a[i][j] = "."
 
                while head < tail:
                    p = queue[head]
                    x, y = p[0], p[1]
 
                    for k in range(4):
                        x1 = x + dx[k]
                        y1 = y + dy[k]
                        if x1 >= 0 and x1 < n and y1 >=0 and y1 < m and a[x1][y1] == "#":
                            queue.append([x1,y1])
                            a[x1][y1] = "."
                            tail = tail + 1
                    head = head+1
 
 
 
    print(ans)
    output_file.write(str(ans) + '\n')
    input_file.close()
    output_file.close()
 
if __name__ == "__main__":
    main()
