(Время: 1 сек. Память: 16 Мб Сложность: 32%)

В прямоугольной таблице N×M (в каждой клетке которой записано некоторое число) в начале игрок находится в левой верхней клетке. За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено). При проходе через клетку с игрока берут столько у.е., какое число записано в этой клетке (деньги берут также за первую и последнюю клетки его пути).

Требуется найти минимальную сумму у.е., заплатив которую игрок может попасть в правый нижний угол.

Входные данные
Во входном файле INPUT.TXT задано два числа N и M - размеры таблицы (1 ≤ N ≤ 20, 1 ≤ M ≤ 20). Затем идет N строк по M чисел в каждой - размеры штрафов в у.е. за прохождение через соответствующие клетки (числа от 0 до 100).

Выходные данные
В выходной файл OUTPUT.TXT выведите минимальную сумму, потратив которую можно попасть в правый нижний угол.


def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    a = input_file.readline().split()
    n, m = int(a[0]), int(a[1])
    c = []
    b = []
    l = 0
 
    for i in range(n):
        current_line = input_file.readline().split()
        d = []
        for j in range(m):
            d.append(int(current_line[j]))
        c.append(d)
 
    for i in range(n):
        e = []
        for j in range(m):
            e.append(0)
        b.append(e)
 
    for i in range(m):
        l = l + c[0][i]
        b[0][i] = l
    l = 0
    for i in range(n):
        l = l + c[i][0]
        b[i][0] = l
 
    for i in range(1, n):
        for j in range(1, m):
            b[i][j] = min(b[i - 1][j], b[i][j - 1]) + c[i][j]
 
    output_file.write(str(b[n - 1][m - 1]) + "\n")
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
