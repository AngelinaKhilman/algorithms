(Время: 1 сек. Память: 16 Мб Сложность: 19%)
На большом поле находятся суслик и собака. Собака хочет суслика съесть, а суслик хочет оказаться в безопасности, добежав до одной из норок, выкопанных в поле. Ни собака, ни суслик в математике не сильны, но, с другой стороны, они и не беспросветно глупы. Суслик выбирает определенную норку и бежит к ней по прямой с определенной скоростью. Собака, которая очень хорошо понимает язык телодвижений, угадывает, к какой норке бежит суслик, и устремляется к ней со скоростью вдвое большей скорости суслика. Если собака добегает до норки первой (раньше суслика), то она съедает суслика; иначе суслик спасается.

Требуется написать программу, которая поможет суслику выбрать норку, в которой он может спастись, если таковая существует.

Входные данные
Во входном файле INPUT.TXT записано в первой строке два числа – координаты суслика. Во второй строке записаны два числа – координаты собаки. В третьей строке записано число n – число норок на поле. В следующих n строках записаны координаты норок. Все координаты являются целыми числами, по модулю не превышающими 10000, и записываются через пробел. Количество норок не превышает 1000.

Выходные данные
В единственную строку выходного файла OUTPUT.TXT нужно вывести число – номер норки, если у суслика есть возможность в ней спастись. Если у суслика есть возможность спрятаться в нескольких норках, то выведите ту, которая первая шла во входных данных. Если суслик не может спастись, то выведите в выходной файл «NO» (без кавычек).

import math
 
def d(x1, y1, x2, y2):
    return (math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2))
 
def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    xs, ys = int(line[0]), int(line[1])
    line = input_file.readline().split()
    xd, yd = int(line[0]), int(line[1])
    line = input_file.readline().split()
    n = int(line[0])
    a = []
    for i in range(n):
        b = []
        line = input_file.readline().split()
        for j in range(2):
            b.append(int(line[j]))
        a.append(b)
 
    print(a)
    c = []
    for i in range(n):
            if 2 * (d(xs, ys, a[i][0], a[i][1])) <= d(xd, yd, a[i][0], a[i][1]):
                c.append(i + 1)
    print(c)
    if len(c) == 0:
        ans = "NO"
    else:
        ans = c[0]
    print(ans)
 
    output_file.write(str(ans) + "\n")
 
if __name__ == "__main__":
    main()
