(Время: 1 сек. Память: 16 Мб Сложность: 25%)
И молвил тогда Король: «Ты храбро сражался, Рыцарь, и твой подвиг не будет забыт в веках. За доблесть твою я дарую тебе сей замок и земли вокруг него. Однако нарушен был тобой строжайший из запретов – все войны видели, как ты сражался без Шляпы на голове подобно дикарям, и их злые духи могли вселиться в тебя. Ты знаешь, что закон предков велит отправлять на небеса души подобных тебе, пока зло, которое могло укорениться в них, не вырвалось наружу. Но в моей воле пощадить тебя, ибо я вижу, что ты достаточно силен чтобы не позволить этому злу проникнуть в мысли и душу твои. Ты должен дать обет три месяца и три дня не покидать своей земли и каждый день три часа после захода солнца молить добрых духов о защите. Дела торопят меня, и не могу я препроводить тебя до замка. Поэтому я дарую тебе и дорогу от этого места до замка. А сейчас иди, и возвращайся по истечении срока.» - так записано в Зеленой Книге Лет.

Помимо этого из Зеленой Книги Лет известно, что земли, вместе с которыми был дарован замок, имели форму круга. Король был очень мудр и, во избежание лишних разбирательств относительно права на землю всегда даровал только области земли, на карте имеющие выпуклую форму. Недавно в распоряжении историков оказалась информация о том, где располагался замок и где происходил этот исторический разговор. Их интересует: участок земли какой площади получил Рыцарь в предположении, что дорога до замка была идеально прямой.

Входные данные
Первая строка входного файла INPUT.TXT содержит два вещественных числа xk и yk – координаты места, в котором происходил диалог. Во второй строке записаны три вещественных числа xc, yc и rc – координаты замка и радиус окружности, ограничивающей дарованную вместе с ним землю. Все числа во входном файле по модулю не превосходят 104.

Выходные данные
В выходной файл OUTPUT.TXT выведите одно вещественное число – площадь земельного участка, полученного Рыцарем, с точностью не менее трех знаков после десятичной точки.

import math
 
def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    x1, y1 = float(line[0]), float(line[1])
    line = input_file.readline().split()
    x2, y2, r = float(line[0]), float(line[1]), float(line[2])
    if (x1 == x2 and y1 == y2) or math.hypot(x1 - x2, y1 - y2) <= r:
        ans = math.pi * r * r
    else:
        g = math.hypot(x1 - x2, y1 - y2)
        b = math.sqrt(g ** 2 - r ** 2)
        a = math.asin(b / g)
        print(a)
        s = (a / 2) * r * r * 2
        print(s)
        s1 = math.pi * r * r
        s2 = b * r
        print(s1 + s2 - s)
        ans = s1 + s2 - s
    ans = '%.6f' % ans
 
    output_file.write(str(ans) + " ")
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
