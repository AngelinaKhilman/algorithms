(Время: 1 сек. Память: 16 Мб Сложность: 38%)
В таблице из N строк и N столбцов клетки заполнены цифрами от 0 до 9. Требуется найти такой путь из клетки (1, 1) в клетку (N, N), чтобы сумма цифр в клетках, через которые он пролегает, была минимальной; из любой клетки ходить можно только вниз или вправо.

Входные данные
В первой строке входного файла INPUT.TXT находится число N. В следующих N строках содержатся по N цифр без пробелов. (2 ≤ N ≤ 250)

Выходные данные
В выходной файл OUTPUT.TXT выведите N строк по N символов. Символ «#» (решетка) показывает, что маршрут проходит через эту клетку, а «.» (точка) - что не проходит. Если путей с минимальной суммой цифр несколько, можно вывести любой.




#include<bits/stdc++.h>

using namespace std;

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    int a[n][n];
    int b[n][n];
    char c[n][n];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            c[i][j] = '.';


    for (int i = 0; i < n; i++){
            string s;
            cin >> s;
        for(int j = 0; j < n; j++){
            a[i][j] = int(s[j]);
        }
    }
    b[0][0] = a[0][0];

    for (int i = 1; i < n; i ++)
    {
        b[0][i] = b[0][i - 1] + a[0][i];
        b[i][0] = b[i - 1][0] + a[i][0];
    }

    for (int i = 1; i < n; i++){
        for(int j = 1; j < n; j++){
            b[i][j] = min(b[i - 1][j], b[i][j - 1]) + a[i][j];
        }
    }
    int indi = n - 1;
    int indj  = n - 1;
    while (indi > 0 || indj > 0){
            if (b[indi - 1][indj] < b[indi][indj - 1])
            {
                 c[indi - 1][indj] = '#';
                 indi = indi - 1;
                 indj = indj;
            }

                else
                {
                     c[indi][indj - 1] = '#';
                     indi = indi;
                     indj = indj - 1;

                }

    }
    c[0][0] = '#';
    c[n - 1][n - 1] = '#';
    for (int i = 0; i < n; i++){
        for(int j = 0; j < n; j++)
            cout << c[i][j];
        cout << endl;
    }



    return 0;
}
