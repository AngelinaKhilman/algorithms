(Время: 1 сек. Память: 16 Мб Сложность: 25%)
Несмотря на кризис, компания Soft-Soft работает успешно. Директор компании принял решение выплатить сотрудникам премии. На следующий день был обнародован список счастливчиков. Чтобы не разглашать размер выплат, в списке напротив фамилий красовались странные цифры и даже буквы. Сотрудники быстро догадались, что размер премий записан в различных системах счисления. Но где и какая система счисления используется, сообразила только секретарша Танечка, которая вспомнила, что директор просил ее принести информацию о возрасте сотрудников. Она поняла, что директор отбрасывал десятки из числа, указывающего возраст, а к оставшимся единицам добавлял число 2. Полученное значение служило основанием для представления начисленной премии.

Помогите любопытной Танечке узнать размер премий в десятичной системе счисления. Известно, что размер премий не превышает 100000 рублей в десятичной системе счисления.

Входные данные
В первой строке входного файла INPUT.TXT записаны два целых числа N и K – возраст и размер премии, разделенные пробелом. Возраст не превышает 100, размер премии указан в некоторой системе счисления (запись числа не содержит незначащих нулей, использует арабские цифры и заглавные английские буквы).

Выходные данные
В выходной файл OUTPUT.TXT выведите одно число – размер премии в десятичной системе счисления.

def cb(num, to_base = 10, from_base = 10):
    if isinstance(num, str):
        n = int(num, from_base)
    else:
        n = int(num)
    alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    if n < to_base:
        return alphabet[n]
    else:
        return cb(n // to_base, to_base) + alphabet[n % to_base]
import math
def main():
    input_file = open("input.txt", "r")
    output_file = open("output.txt", "w")
    line = input_file.readline().split()
    n, p = str(line[0]), str(line[1])
    n = n[::-2]
    nint = int(n) + 2
    print(nint)
    ans = cb(p, 10, nint)
    print(ans)
 
    output_file.write(str(ans) + '\n')
 
    input_file.close()
    output_file.close()
 
 
if __name__ == "__main__":
    main()
